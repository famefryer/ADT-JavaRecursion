
public class Maze {
	static int moveI = 0;
	static int moveJ = 0;
	static char[][] maze = {
			{ '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*',
					'*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*',
					'*', '*', '*', '*' },
			{ '*', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ',
					' ', ' ', ' ', ' ', '*', ' ', '*', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*',
					' ', ' ', ' ', 'f' },
			{ '*', ' ', ' ', '*', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', '*', ' ', '*', '*', '*',
					' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', '*', ' ', ' ', ' ', '*', ' ',
					' ', '*', ' ', '*' },
			{ '*', ' ', '*', '*', ' ', ' ', '*', ' ', '*', '*', ' ', '*', '*', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ',
					' ', '*', ' ', '*', ' ', '*', '*', ' ', '*', ' ', '*', ' ', ' ', '*', ' ', '*', ' ', '*', ' ', ' ',
					'*', '*', ' ', '*' },
			{ '*', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', '*', ' ', '*', ' ', ' ', '*', '*', ' ', '*', ' ', '*', ' ',
					'*', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', '*',
					'*', ' ', ' ', '*' },
			{ '*', '*', ' ', '*', '*', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*',
					' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', '*', '*', ' ',
					' ', ' ', '*', '*' },
			{ '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', ' ', ' ',
					'*', '*', ' ', ' ', '*', ' ', '*', ' ', '*', '*', ' ', '*', '*', ' ', '*', ' ', ' ', ' ', '*', ' ',
					'*', ' ', '*', '*' },
			{ '*', ' ', '*', ' ', '*', ' ', ' ', '*', '*', '*', ' ', ' ', '*', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ',
					' ', '*', ' ', '*', ' ', '*', '*', ' ', ' ', ' ', ' ', '*', '*', ' ', ' ', '*', ' ', '*', ' ', ' ',
					'*', ' ', ' ', '*' },
			{ '*', '*', ' ', '*', ' ', ' ', '*', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', '*', ' ', '*', '*',
					' ', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', '*', '*', ' ', ' ', '*', ' ',
					'*', ' ', '*', '*' },
			{ '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', '*', ' ', ' ', ' ', '*', ' ', ' ', '*',
					'*', '*', ' ', '*', ' ', '*', ' ', '*', '*', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ',
					'*', ' ', ' ', '*' },
			{ '*', ' ', '*', ' ', '*', ' ', ' ', '*', '*', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', '*', ' ', ' ',
					' ', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', '*',
					'*', '*', ' ', '*' },
			{ '*', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', '*', ' ', ' ', '*', ' ', '*', ' ',
					'*', ' ', ' ', ' ', '*', '*', '*', '*', ' ', ' ', ' ', '*', '*', ' ', '*', ' ', ' ', '*', ' ', ' ',
					'*', ' ', ' ', '*' },
			{ '*', ' ', '*', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*',
					' ', '*', '*', '*', ' ', '*', ' ', '*', '*', '*', ' ', ' ', '*', '*', ' ', '*', '*', ' ', ' ', '*',
					' ', ' ', '*', '*' },
			{ '*', ' ', ' ', ' ', '*', '*', ' ', '*', ' ', '*', ' ', ' ', '*', '*', '*', '*', '*', '*', ' ', '*', ' ',
					' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ',
					' ', '*', '*', '*' },
			{ '*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ',
					'*', '*', ' ', '*', ' ', '*', '*', '*', '*', ' ', '*', '*', '*', ' ', '*', ' ', ' ', ' ', '*', '*',
					' ', ' ', '*', '*' },
			{ '*', ' ', '*', '*', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', '*',
					' ', ' ', ' ', '*', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', '*', '*', ' ', ' ',
					'*', ' ', ' ', '*' },
			{ '*', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', '*', '*', ' ', '*', '*', ' ', '*', ' ', '*', '*', ' ', '*',
					' ', '*', '*', ' ', ' ', '*', ' ', '*', '*', '*', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*',
					'*', '*', ' ', '*' },
			{ '*', ' ', ' ', '*', '*', '*', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*',
					' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', '*', ' ', '*', ' ', ' ',
					'*', ' ', ' ', '*' },
			{ '*', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', '*', ' ', ' ', '*', ' ', '*', '*', '*', ' ', '*', ' ',
					'*', ' ', '*', ' ', ' ', '*', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', '*', ' ', '*', ' ',
					' ', ' ', '*', '*' },
			{ '*', ' ', ' ', '*', '*', ' ', '*', ' ', '*', ' ', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ',
					'*', ' ', ' ', '*', ' ', '*', ' ', '*', ' ', '*', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', '*',
					'*', '*', ' ', '*' },
			{ '*', ' ', '*', ' ', ' ', ' ', '*', '*', ' ', ' ', '*', '*', '*', ' ', '*', ' ', '*', '*', '*', ' ', ' ',
					' ', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', '*',
					' ', ' ', ' ', '*' },
			{ '*', ' ', ' ', '*', '*', ' ', ' ', ' ', '*', ' ', ' ', '*', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*',
					' ', '*', ' ', ' ', '*', '*', ' ', ' ', '*', ' ', '*', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ',
					'*', '*', ' ', '*' },
			{ '*', '*', ' ', ' ', ' ', '*', '*', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', ' ', '*', ' ', '*', ' ', ' ',
					'*', ' ', '*', ' ', ' ', '*', '*', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', '*', '*', ' ', '*', ' ',
					'*', '*', ' ', '*' },
			{ '*', ' ', ' ', '*', ' ', ' ', '*', '*', ' ', ' ', '*', ' ', '*', '*', ' ', ' ', '*', ' ', ' ', '*', ' ',
					' ', ' ', ' ', '*', ' ', ' ', '*', '*', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ',
					' ', ' ', ' ', '*' },
			{ '*', ' ', '*', ' ', '*', ' ', ' ', '*', '*', ' ', '*', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', ' ',
					'*', ' ', '*', '*', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', '*', ' ', ' ', '*',
					'*', ' ', '*', '*' },
			{ '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', ' ', '*', ' ', ' ', '*', ' ', ' ',
					'*', ' ', ' ', '*', ' ', '*', '*', ' ', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ',
					'*', ' ', ' ', '*' },
			{ '*', ' ', '*', '*', '*', '*', '*', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*',
					' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', '*', ' ', '*', ' ',
					' ', '*', ' ', '*' },
			{ '*', '*', ' ', ' ', ' ', '*', '*', ' ', ' ', '*', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ', '*', '*', ' ',
					'*', ' ', '*', ' ', '*', '*', ' ', '*', ' ', '*', '*', '*', '*', ' ', '*', ' ', ' ', ' ', ' ', '*',
					'*', '*', ' ', '*' },
			{ '*', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ',
					' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ',
					' ', ' ', ' ', '*' },
			{ '*', 's', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*',
					'*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*',
					'*', '*', '*', '*' } };
/**
 * The method that use for find the way out of the maze.
 * @param i is the row.
 * @param j is the column.
 * @param direction is the previous way that runner goes.
 * @return
 */
	public static boolean runner(int i, int j, char direction) {
		if (i == 1 && j == 44) {
			return true;
		}
		if (i >= 30 || i <= 0 || j >= 45 || j <= 0) {
			return false;
		}
		if (maze[i][j] == '*') {
			return false;
		}
		if (direction != 'u' && runner(i + 1, j, 'd')) {
			maze[i + 1][j] = '.';
			return true;
		} else if (direction != 'd' && runner(i - 1, j, 'u')) {
			maze[i - 1][j] = '.';
			return true;
		} else if (direction != 'l' && runner(i, j + 1, 'r')) {
			maze[i][j + 1] = '.';
			return true;
		} else if (direction != 'r' && runner(i, j - 1, 'l')) {
			maze[i][j - 1] = '.';
			return true;
		} 
		return false;
	}

	public static void main(String[] args) {
		runner(29, 1, 'u');
		for (int i = 0; i < 30; i++) {
			for (int j = 0; j < maze[0].length; j++) {
				System.out.print(maze[i][j]);
			}
			System.out.println("");
		}
	}
}